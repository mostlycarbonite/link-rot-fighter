// Generated by CoffeeScript 1.9.3
(function() {
  var ArchiveIS, getUrl, http, request, submitUrl,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  request = require('request');

  http = require('http');

  submitUrl = "https://archive.is/submit/";

  getUrl = "https://archive.is/";

  ArchiveIS = (function() {
    function ArchiveIS() {
      this.check = bind(this.check, this);
      this.save = bind(this.save, this);
    }

    ArchiveIS.prototype.save = function(url, cb) {
      console.log("ArchiveIS tool requesting save for " + url);
      return request.post(submitUrl, {
        form: {
          url: url,
          anyway: 1
        }
      }, function(error, response, body) {
        if (!error || response.statusCode !== 200) {
          console.dir("Save response status: " + response.statusCode);
          return typeof cb === "function" ? cb(error, null) : void 0;
        } else {
          return typeof cb === "function" ? cb(null, {
            body: body,
            response: response
          }) : void 0;
        }
      });
    };

    ArchiveIS.prototype.check = function(url, cb) {
      console.log("ArchiveIS tool checking " + url + " -- " + getUrl + "/" + url);
      return request.get(getUrl + "/" + url, {}, function(error, response, body) {
        if (!error) {
          return typeof cb === "function" ? cb(null, {
            found: body.indexOf('No results') === -1
          }) : void 0;
        } else {
          return typeof cb === "function" ? cb(error, null) : void 0;
        }
      });
    };

    return ArchiveIS;

  })();

  module.exports = ArchiveIS;

}).call(this);

//# sourceMappingURL=archiveIS.js.map
